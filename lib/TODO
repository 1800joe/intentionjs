TODO:
	
	derive context features
		placement
		class/attr base
		set theory: union (all options are the union of the base plus context spec, if there is no context spec it is the base)
		empty attr + context specific attr means there is no base
			provide a list of supported attrs and save all of their bases 


	fix the getter and setter for "responsive elms" in intention


	would one ever want multiple contextualizers?
		sure
			you could contextualize on a per mod level opposed to the window lvl

	would one ever want multiple intention libs?
		yes
			i wrote with the option for multiple instantiations so that we could think about a per module responsiveness
			wherein we manufacture a resize or other context change event for an individual element on the page




	data+1 [if prefix continue], function[move|attr] +0, context[mobile] +4, interaction[touch] +2, subfunction[append] +9

	// func should give 0 because for certain attrs the sub func is enough to derive the main

	data-move 1
	data-mobile-move 5
	data-touch-move 3
	data-touch-mobile-move 7
	data-mobile-touch-move 7

	data-mobile-move-append 8

	data-mobile-touch-move-append 9


	data-attr-class 5
	data-mobile-attr-class 8
	data-touch-attr-class 6

	// these three are all the same
	data-mobile-touch-attr-class 10
	data-touch-mobile-attr-class 10
	data-touch-mobile-class 10 


	[data, attr, class, touch, mobile, value]

	funcList
		class
		attr
		move

	attr([which attr], which val)


	class


	data-attr-id

	data-itn-mobile-touch-attr-class



	prefix option

	finding the correct attrs
		to get the base attrs we need a regex that looks for
			all attrs with the function and no context specification
			data-[function][^([context1|context2])]
				of this subset only those that are either of the current interaction model
				or
				no interaction model specified

	once we have found the subset of attrs to consider the data should be organized by filter
	remove "data"


	to organize into the respective functions first check to see if a sub func is employed

	instr = {
		class:{
			options:[{name:data-foo-bar,value:baz},]
		},
		attr: {
			options:[{name:data-foo,value:bar},
				{name:data-mobile-class, value:holler}]
		}
	}


	instr = {
		
		attr: {
			src:[{name:something, value:else}]
			href:[{name:something, value:else}] // choose best
			class:[class1,class2,class3],
		}
		move: 
	}




	{
		name:attr,
		category: [href],
		value: 'http://www.wsj.com'
		rank: 10
	}

	{attr:[class, val, context, interaction]}
	{move:[]}



	list of functions
		class
		move
		attr


